/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.0.11
 * Generated at: 2021-10-25 15:02:06 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;
import com.exam.entities.Answers;
import java.text.DateFormat;
import com.exam.entities.UserResult;
import com.exam.dao.UserResultDao;
import com.exam.entities.Course;
import com.exam.helper.ConnectionProvider;
import com.exam.dao.CourseDao;
import com.exam.entities.User;
import com.exam.entities.Message;
import java.util.ArrayList;

public final class answers_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("com.exam.entities.Course");
    _jspx_imports_classes.add("com.exam.helper.ConnectionProvider");
    _jspx_imports_classes.add("com.exam.entities.Answers");
    _jspx_imports_classes.add("com.exam.entities.User");
    _jspx_imports_classes.add("com.exam.dao.CourseDao");
    _jspx_imports_classes.add("com.exam.entities.Message");
    _jspx_imports_classes.add("com.exam.entities.UserResult");
    _jspx_imports_classes.add("java.text.DateFormat");
    _jspx_imports_classes.add("com.exam.dao.UserResultDao");
    _jspx_imports_classes.add("java.util.ArrayList");
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=ISO-8859-1");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			"error_page.jsp", true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");

User user = (User) session.getAttribute("currentUser");
if (user == null) {
	response.sendRedirect("login_page.jsp");
}

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"ISO-8859-1\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<link rel=\"stylesheet\"\r\n");
      out.write("	href=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css\"\r\n");
      out.write("	integrity=\"sha384-Gn5384xqQ1aoWXA+058RXPxPg6fy4IWvTNh0E263XmFcJlSAwiGgFAW/dAiS6JXm\"\r\n");
      out.write("	crossorigin=\"anonymous\">\r\n");
      out.write("<link href=\"css/mystyle.css\" rel=\"stylesheet\" type=\"text/css\" />\r\n");
      out.write("<link rel=\"stylesheet\"\r\n");
      out.write("	href=\"https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css\">\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<style>\r\n");
      out.write(".banner-background {\r\n");
      out.write("	clip-path: polygon(0 0, 70% 0%, 100% 0, 99% 94%, 63% 100%, 31% 93%, 0 98%, 0% 30%);\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".red {\r\n");
      out.write("	background-color: #FC4343;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".green {\r\n");
      out.write("	background-color: #29FE7F;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".yellow {\r\n");
      out.write("	background-color: #F8FE29;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("	<!--navbar-->\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("	<nav class=\"navbar navbar-expand-lg navbar-dark primary-background\">\r\n");
      out.write("		<a class=\"navbar-brand\" href=\"index.jsp\"><span\r\n");
      out.write("			class=\"fa fa-asterisk\"></span>OEWP</a>\r\n");
      out.write("		<button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\"\r\n");
      out.write("			data-target=\"#navbarSupportedContent\"\r\n");
      out.write("			aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\"\r\n");
      out.write("			aria-label=\"Toggle navigation\">\r\n");
      out.write("			<span class=\"navbar-toggler-icon\"></span>\r\n");
      out.write("		</button>\r\n");
      out.write("\r\n");
      out.write("		<div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n");
      out.write("			<ul class=\"navbar-nav mr-auto\">\r\n");
      out.write("				<li class=\"nav-item active\"><a class=\"nav-link\" href=\"profile.jsp\"><span\r\n");
      out.write("						class=\"fa fa-bell-o\"></span>Practice <span class=\"sr-only\">(current)</span></a>\r\n");
      out.write("				</li>\r\n");
      out.write("				\r\n");
      out.write("				<li class=\"nav-item\"><a class=\"nav-link\" href=\"#!\"\r\n");
      out.write("					data-toggle=\"modal\" data-target=\"#contact-modal\"><span\r\n");
      out.write("						class=\"fa fa-address-card\"></span>Contact</a></li>\r\n");
      out.write("\r\n");
      out.write("			</ul>\r\n");
      out.write("			<ul class=\"navbar-nav mr-right\">\r\n");
      out.write("\r\n");
      out.write("				<li class=\"nav-item\"><a class=\"nav-link\" href=\"#!\"\r\n");
      out.write("					data-toggle=\"modal\" data-target=\"#profile-modal\"><span\r\n");
      out.write("						class=\"fa fa-user-circle\"></span>");
      out.print(user.getName());
      out.write("</a></li>\r\n");
      out.write("				<li class=\"nav-item\"><a class=\"nav-link\" href=\"LogoutServlet\"><span\r\n");
      out.write("						class=\"fa fa-user-plus\"></span>Logout</a></li>\r\n");
      out.write("\r\n");
      out.write("			</ul>\r\n");
      out.write("		</div>\r\n");
      out.write("	</nav>\r\n");
      out.write("\r\n");
      out.write("	<!--end of navbar-->\r\n");
      out.write("	<div class=\"container mt-4\">\r\n");
      out.write("		<div class=\"row\">\r\n");
      out.write("			<div class=\"col-md-6\">\r\n");
      out.write("				<table class=\"table table-striped\">\r\n");
      out.write("					<thead class=\"thead-dark\">\r\n");
      out.write("						<tr>\r\n");
      out.write("							<th scope=\"col\">Q No</th>\r\n");
      out.write("							<th scope=\"col\">Answers</th>\r\n");
      out.write("						</tr>\r\n");
      out.write("					</thead>\r\n");
      out.write("					<tbody>\r\n");
      out.write("\r\n");
      out.write("						");

						ArrayList<Answers> list = (ArrayList<Answers>) request.getAttribute("answer_list");
						int i = 0;
						for (Answers answer : list) {
							++i;
						
      out.write("\r\n");
      out.write("\r\n");
      out.write("						<tr>\r\n");
      out.write("							<th scope=\"row\">");
      out.print(i);
      out.write("</th>\r\n");
      out.write("							<td class=\"answer\">");
      out.print(answer.getAoption());
      out.write("</td>\r\n");
      out.write("						</tr>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("						");

						}
						
      out.write("\r\n");
      out.write("\r\n");
      out.write("					</tbody>\r\n");
      out.write("				</table>\r\n");
      out.write("			</div>\r\n");
      out.write("		</div>\r\n");
      out.write("		<div class=\"float-right col-md-8\">\r\n");
      out.write("		<a href=\"profile.jsp\" class=\"btn primary-background text-white\">Dashboard</a>\r\n");
      out.write("		</div>\r\n");
      out.write("	</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("	<script src=\"https://code.jquery.com/jquery-3.6.0.min.js\"\r\n");
      out.write("		integrity=\"sha256-/xUj+3OJU5yExlq6GSYGSHk7tPXikynS7ogEvDej/m4=\"\r\n");
      out.write("		crossorigin=\"anonymous\"></script>\r\n");
      out.write("	<script\r\n");
      out.write("		src=\"https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.12.9/umd/popper.min.js\"\r\n");
      out.write("		integrity=\"sha384-ApNbgh9B+Y1QKtv3Rn7W3mgPxhU9K/ScQsAP7hUibX39j7fakFPskvXusvfa0b4Q\"\r\n");
      out.write("		crossorigin=\"anonymous\"></script>\r\n");
      out.write("	<script\r\n");
      out.write("		src=\"https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/js/bootstrap.min.js\"\r\n");
      out.write("		integrity=\"sha384-JZR6Spejh4U02d8jOt6vLEHfe/JQGiRRSQQxSfFWpi1MquVdAyjUar5+76PVCmYl\"\r\n");
      out.write("		crossorigin=\"anonymous\"></script>\r\n");
      out.write("	<script src=\"js/myjs.js\" type=\"text/javascript\"></script>\r\n");
      out.write("	<script>\r\n");
      out.write("	let elements = document.getElementsByClassName(\"answer\");\r\n");
      out.write("	for (var i = 0, len = elements.length; i < len; i++) {\r\n");
      out.write("	    // elements[i].style ...\r\n");
      out.write("	    if(elements[i].innerHTML == \"Wrong Answer\"){\r\n");
      out.write("	    	elements[i].classList.add(\"red\");\r\n");
      out.write("	    }\r\n");
      out.write("	    if(elements[i].innerHTML == \"Correct Answer\"){\r\n");
      out.write("	    	elements[i].classList.add(\"green\");\r\n");
      out.write("	    }\r\n");
      out.write("	    if(elements[i].innerHTML == \"Not Answered\"){\r\n");
      out.write("	    	elements[i].classList.add(\"yellow\");\r\n");
      out.write("	    }\r\n");
      out.write("	}\r\n");
      out.write("	</script>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
